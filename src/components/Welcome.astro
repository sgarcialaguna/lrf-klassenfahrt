---
import Poll from "./Poll";
import Results from "./Results";
import { db, User, eq } from "astro:db";

if (Astro.request.method == "POST") {
  const currentUser = await Astro.locals.currentUser();
  if (!currentUser) {
    return new Response("Unauthorized", { status: 401 });
  }

  try {
    const data = await Astro.request.formData();
    let rawMonths = data.getAll("months")!;
    let months: Array<number> = rawMonths.map((m) => Number(m));
    let users = currentUser
      ? await db.select().from(User).where(eq(User.id, currentUser.id))
      : [];
    let user = users[0];

    if (!user) {
      await db.insert(User).values({
        id: currentUser.id,
        username: currentUser.username!,
        icon: currentUser.imageUrl,
        months,
      });
    } else {
      await db
        .update(User)
        .set({ months, icon: currentUser.imageUrl })
        .where(eq(User.id, currentUser.id));
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

const currentUser = await Astro.locals.currentUser();
const allUsers = await db.select().from(User);
let users = currentUser
  ? await db.select().from(User).where(eq(User.id, currentUser.id))
  : [];
let user = users[0];
---

<div class="container mx-auto mt-4">
  <Poll months={user ? (user.months as Array<number>) : []} client:load />
  <Results users={allUsers as any} />
</div>
